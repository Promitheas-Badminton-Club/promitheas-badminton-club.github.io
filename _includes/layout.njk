<!doctype html>
<html dir="{{lang_dir}}" lang="{{lang}}">
<head>
  <meta charset="UTF-8">

  {% if noindex or tags | excludes('published') %}
  <meta name="robots" content="noindex">
  {% endif %}


  <!-- Expereriment: theme-color -->
  <meta
    name="theme-color"
    content="#FFFFFF"
    media="(prefers-color-scheme: light)" />
  <meta
    name="theme-color"
    content="#000000"
    media="(prefers-color-scheme: dark)" />

  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Promitheas BC | {{ title }}</title>
  <meta name="description" content="{{description}}">

  <script>
    window.env = JSON.parse(`{{env | safe}}`)
  </script>
  <script async src="https://www.googletagmanager.com/gtag/js?id=G-25JSPCJ2C8"></script>
  <script>window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'G-25JSPCJ2C8', window.env.gtag);
  </script>

  <link rel="icon" href="/asset/favicon.ico" type="image/x-icon">
  <link rel="icon" href="/asset/favicon-16x16.png" sizes="16x16" type="image/png">
  <link rel="icon" href="/asset/favicon-32x32.png" sizes="32x32" type="image/png">
  <link rel="apple-touch-icon" href="/asset/apple-touch-icon.png">
  <link rel="icon" href="/asset/android-chrome-192x192.png" sizes="192x192" type="image/png">
  <link rel="icon" href="/asset/android-chrome-512x512.png" sizes="512x512" type="image/png">
  <meta name="theme-color" content="#ffffff">  

  <meta property="og:title" content="{{title}}"/>
  <meta property="og:type" content="article"/>
  {% if image %}
  <meta property="og:image" content="{{image | withDomain}}"/>
  {% endif %}
  <meta property="og:url" content="{{url | withDomain}}"/>
  <meta property="og:description" content="{{description}}"/>

  <style>

    /* External CSS */
    @import url('https://unpkg.com/simpledotcss/simple.min.css');

    @media print {
      .no-print {
        display: none !important;
      }
    }

    .bold {
      font-weight: bold;
    }

    .logo {
      z-index: -1;
      margin-top: 1rem;
      position: absolute;
      right: 0;
      opacity: 0.1
    }

    hr {
      opacity: 0.2;
    }

    .hehe {
      position: absolute;
      right: 0;
      z-index: -1;
      opacity: .5;
    }

    iframe {
      width: 100%;
    }

    td, th {
      max-width: 90vw;
    }

    .display-none {
      display: none !important;
    }

    .sr-only {
      position: absolute;
      width: 1px;
      height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0, 0, 0, 0);
      white-space: nowrap;
      border: 0;
    }

    .card-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 20px;
      box-sizing: border-box;
    }

    .card-grid > article {
      box-sizing: border-box;
    }

    .card-grid > article img {
      width: 100%;
      max-height: 256px;
      object-fit: cover;
      object-position: 50% top;
    }

    :root, ::backdrop {
      --bg-transparent: #FFFFFF44; /* Semi-transparent white background */
      --accent: #BB1D2C; /* Dark reddish primary color */
      --accent-hover: #A11A27; /* Slightly darker shade for hover state */
    }

    @media (prefers-color-scheme: dark) {
      :root,
      ::backdrop {
        --bg: #000000AA; /* Semi-transparent black background */
        --bg-transparent: #00000044; /* More transparent black background */
        --accent: #BB1D2C; /* Dark reddish primary color */
        --accent-hover: #A11A27; /* Slightly darker shade for hover state */
        --accent-bg: #33333366;
      }
    }

    * {
      outline-offset: 0.1rem;
    }

    h1 {
      font-size: 2rem;
    }

    a:focus {
      outline: 2px solid;
    }

    h2 {
      font-size: 1.5rem;
    }

    h3 {
      font-size: 1.2rem;
    }

    ul h3, ol h3 {
      margin-left: -1em;
    }

    .breadcrumbs ul {
      list-style-type: none;
      padding: 0;
    }

    .breadcrumbs li {
      display: inline-block;

    }

    .breadcrumbs li::after {
      color: var(--border);
      content: " / ";
      margin: 0 5px; /* adjust spacing as needed */
    }

    @view-transition {
      navigation: auto;
    }

    .spotlight ul {
      list-style-type: none;
      padding: 0;
    }

    body {
      word-wrap: break-word;
    }

    figure embed {
      width: 100%;
    }

    /* Unvisited links */
    a {
      color: var(--accent-hover) !important; /* Set unvisited links to red */
      text-underline-offset: 0.4rem;
      text-decoration: none;
    }

    a:hover {
      text-decoration: underline;
    }

    blockquote {
      margin-inline: 0;
      border-color: var(--disabled);
    }

    /* Visited links */
    a:visited {
      color: var(--accent) !important; /* Green for visited links */
    }

    .menu--main {
      font-size: 110%;
    }

    .menu ul {
      list-style-type: none;
      padding: 0;
    }

    .menu li {
      display: inline-block;
      margin: 1ch 1ch 1ch 0;
    }

    a[aria-current] {
      color: var(--text) !important;
    }

    main {
      padding-top: 0;
    }


    main h1 {
      margin-top: 3rem;
    }

    .no-margin {
      margin: 0;
    }

  </style>

  <script>
    function onRef(name, cb) {
      onRef.state.push([name, cb])
    }

    onRef.state = []

    window.addEventListener('load', () => {
      onRef.state.forEach(([name, cb]) => {
        document
          .querySelectorAll(`[data-ref="${name}"]`)
          .forEach(elem => cb(elem))
      })
    }, 1000)
  </script>
</head>


<body>



<style>
  body:before {
    z-index: -1;
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: url('{{image or background}}') center/cover no-repeat;
    opacity: 0.04;
    filter: blur(30px);
  }

    main {
      position: relative;
    }

    .subtle {
      opacity: 0.8;
      font-style: italic;
    }

    .header-anchor {
      text-decoration: none;
      opacity: 0.5;
    }

    .header-anchor:hover {
      opacity: 1;
    }
</style>

  <main id="main" >

    <!-- TODO: Consider moving to a separate file -->
    {% macro currentPage(url) %}
      {% if page.url.startsWith(url) %} aria-current="page" {% endif %} href="{{url}}"
    {% endmacro %}
    {% macro currentPageExact(url) %}
      {% if page.url == url %} aria-current="page" {% endif %} href="{{url}}"
    {% endmacro %}


  <style>
    .update {
      list-style-type: none;
      margin: 0.5rem 0;
      padding: 0;
    }

    .update li {
      border-left: 1px solid var(--accent);
      padding-left: 1ch;
      margin: 0.5rem 0;
    }

    .update li a {
      display: block;
    }

  </style>
  <ol class="update">

    {% for item in collections.update | reverse | unexpired %}
      <li lang="{{item.data.lang}}">
        <a href="{{item.url}}">
          <span style="display: block; font-size: 60%; opacity: 0.69;">
            {{item.data.deadline | date}}
          </span>
          {{item.data.title}}
        </a>
      </li>
    {% endfor %}

  </ol>

  <nav class="menu menu--main no-print">
    <img aria-hidden="true" class="logo" alt="Promitheas BC" src="/asset/logo.png">

    <ul>
      <li><a {{currentPageExact("/")}}>Home</a></li>
      <li><a lang="en" {{currentPage("/en/")}}>English</a></li>
      <li><a lang="ru" {{currentPage("/ru/")}}>Русский</a></li>
      <li><a lang="el" {{currentPage("/el/")}}>ελληνικά</a></li>
      <style>
        .search svg {
          height: 0.7em;
          fill: var(--accent);
        }
      </style>
      <li class="search"><a title="Search" {{currentPage('/search')}}>
          <span class="sr-only">Search</span>
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!--!Font Awesome Free 6.6.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"/></svg>
      </a></li>
    </ul>
  </nav>


  <hr class="no-margin">

  <nav class="menu no-print">
    {% block menu %}
    {% endblock %}
  </nav>

  <!--
  <nav class="breadcrumbs">
    <ul>
    {% for crumb in page.url | breadcrumb  %}
      <li>
        <a href="{{crumb.url}}">{{crumb.name}}</a>
      </li>
    {% endfor %}

    </ul>
  </nav>
  -->
    <h1>
      {{ title }}
    </h1>

    <p class="subtle">
      {% if author %}
        {{ author }} ·
      {% endif %}
      {% if date %}
        <time>{{date | date(lang)}}</time>
      {% endif %}
      {% from "socials.njk" import socials %}
      {% if noindex or nosocials %}
        <!-- Hiding socials -->
      {% else %}
        {{ socials(page.url | withDomain) }}
      {% endif %}
    </p>


    {% if podcast %}
    <style>
      .podcast_player {
        width: 100%;
        display: block;
      }
    </style>

    <!-- Experiment: disable audio player event when has podcast file
    <audio class="podcast_player" src="{{ podcast.file }}" controls>
      Your browser does not support the audio element.
    </audio>
    -->


    <script>
      const audioPlayer = document.querySelector('.podcast_player');
      let userIsScrolling = false; // Track if the user is scrolling
      let isProgrammaticScroll = false; // Track if the scroll is triggered programmatically
      let scrolledToElement;

      function timeToSeconds(time) {
        const parts = time.split(':');
        let seconds = 0;

        if (parts.length === 3) {
          // HH:MM:SS format
          seconds = parseInt(parts[0], 10) * 3600 + parseInt(parts[1], 10) * 60 + parseInt(parts[2], 10);
        } else {
          // MM:SS format
          seconds = parseInt(parts[0], 10) * 60 + parseInt(parts[1], 10);
        }

        return seconds;
      }

      function scrollToTextElement(currentTime) {
        if (userIsScrolling) return;
        if (isProgrammaticScroll) return;

        const closest = Array.from(document.querySelectorAll('[data-time]')).reduce((closest, element) => {
          const dateTime = element.getAttribute('data-time');
          const elementTimeInSeconds = timeToSeconds(dateTime);

          if (elementTimeInSeconds <= currentTime) {
            if (!closest || elementTimeInSeconds > closest.time) {
              return { element, time: elementTimeInSeconds };
            }
          }
          return closest;
        }, null);

        if (closest == null) return
        if (scrolledToElement == closest.element) return;

        scrolledToElement = closest.element

        isProgrammaticScroll = true
        closest.element.scrollIntoView({ behavior: 'smooth' });
      }

      audioPlayer.addEventListener('timeupdate', () => {
        const currentTime = audioPlayer.currentTime;
        scrollToTextElement(currentTime);
      });

      function debounce(func, delay) {
        let scrollTimeout;

        return function(...args) {
          clearTimeout(scrollTimeout);
          scrollTimeout = setTimeout(() => {
            func.apply(this, args);
          }, delay);
        };
      }

      window.addEventListener('scroll', debounce(() => {
        if (isProgrammaticScroll) {
          isProgrammaticScroll = false;
          return;
        }

        userIsScrolling = true;
      }, 200));

      audioPlayer.addEventListener('play', () => {
        userIsScrolling = false;
      });

    </script>


    {% endif %}

    {{ content | safe }}

    {% block main %}{% endblock %}

    {% from "preview.njk" import preview %}

    {% if files and files.length > 0 %}
      <h2 id="files">
        <a class="header-anchor" href="#files" aria-label="Files" title="Link to this section">#</a>
        Files</h2>

      {% for file in files %}
      <p>
        {{preview(file)}}
      </p>
      {% endfor %}
    {% endif %}


  <hgroup class="spotlight no-print">
    {% block spotlight %}{% endblock %}
  </hgroup>

  </main>

    <a class="no-print" href="#" id="scrollTopBtn">🔻</a>

    <script>
      const scrollBtn = document.getElementById("scrollTopBtn");
      window.onscroll = function () {
        if (window.scrollY > window.innerHeight / 2) {
          scrollBtn.classList.add("show");
        } else {
          scrollBtn.classList.remove("show");
        }
      };
    </script>
    <style>

      #scrollTopBtn {
        outline: none;
        font-size: 2rem;
        transition: opacity 0.5s ease, transform 0.5s ease;
        text-decoration: none;
        opacity: 0;
        transform: rotate(0deg);
        position: fixed;
        bottom: 8rem;
        right: 0;
        padding: 1ch;
        cursor: pointer;
        z-index: 2;
        pointer-events: none;
      }

      #scrollTopBtn.show {
        opacity: 1;
        transform: rotate(180deg);
        pointer-events: auto;
      }
    </style>

  <img class="hehe" src="https://www.animatedimages.org/data/media/417/animated-badminton-image-0053.gif" border="0" aria-hidden="true" alt="animated-badminton-image-0053">

  <footer class="no-print">

    <p>
      <a href="mailto:promitheasb@gmail.com">promitheasb@gmail.com</a> |
      <a href="/feed.xml">RSS</a>
    <p>
  </footer>

  <script id="quicklink_js" async src="https://cdnjs.cloudflare.com/ajax/libs/quicklink/2.3.0/quicklink.umd.js"></script>

  <script>

    document.getElementById("quicklink_js")
      .addEventListener("load", () => {
        quicklink.listen();
      });

    window.addEventListener("popstate", function () {
      window.document.getElementById("menu").removeAttribute("open")
    });

  </script>

  {% renderOnce %}
  {% endrenderOnce %}
  </body>


</html>
